{% extends 'base.twig' %}

{% import 'twigMacro/formMacro.twig' as form %}

{% block head %}
    <script src="../vendor/tinymce/tinymce/tinymce.min.js"></script>
 
{% endblock %}

{% block content %}

<section class="container mb-3">
    <div class="row justify-content-md-center">
        <div class="col-10 shadow">
            <h1 class="">{{ title }}</h1>
            <form method="post" action="?route={{ post.get('id') ? 'editArticle&articleId=' ~ post.get('id') : 'addArticle'}}">
                <div class="row">
                    <div class="col">

                        <div class="row">

                            {{ form.input('text','Titre de l\'article','title', { errors : errors.title, value : post.get('title'), help : '63 caractères maximum : 0/63'}) }}
        
                            {{ form.select('Auteur','authorId', users, { errors : errors.author, selected : post.get('authorId') ?: session.get('id') }) }}
                            
                            {{ form.select('Catégorie','categoryId', categories, { errors : errors.category, selected : post.get('categoryId')}) }}

                        </div>

                        {{ form.textarea('Chapô', 'lede', 'articleLede', { errors : errors.lede, value : post.get('lede') ? post.get('lede') | markdown_to_html, help : '0/500'}) }}

                        {{ form.textarea('Contenu de l\'article', 'content', 'articleContent', { errors : errors.content, value : post.get('content') ? post.get('content') | markdown_to_html, size : 500, help : '/2000'}) }}

                        <div class="row">

                            {{ form.checkbox({ 
                                allowComment : {
                                    name : 'allowComment',
                                    label : 'Autoriser les commentaires sur cet article',
                                    value : "1",
                                    checked : post.get('allowComment')
                                    }
                                }) 
                            }}

                            {{ form.radio('statusId',{
                                published : {
                                    id : 'published',
                                    label : 'Publier',
                                    name : 'statusId1',
                                    value : '1',
                                    checked : post.get('statusId'),
                                    default : true
                                    },
                                private : {
                                    id : 'private',
                                    label : 'Publier en privé',
                                    name : 'statusId2',
                                    value : '2',
                                    checked : post.get('statusId')
                                    },
                                hidden : {
                                    id : 'hidden',
                                    label : 'Attendre avant publication',
                                    name : 'statusId3',
                                    value : '3',
                                    checked : post.get('statusId')
                                    }
                                }, { errors : errors.statusId })
                            }}

                        </div>
                        {{ form.submit( post.get('id') ? 'Mettre à jour' : 'Créer l\'article' ,{ position : 'me-auto'}) }}

                    </div>
                </div>
            </form>                       
        </div>      
    </div>
</section>
   <script type="text/javascript">
        tinymce.init({
            selector: '#articleContent',
            plugins: 'lists wordcount',
            toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | wordcount' ,
            setup: function content (text) {
                let contentContentHelp = document.getElementById("contentContentHelp");
                let contentTextarea = document.getElementById("articleContent");
                text.on('keyup', function (e) { 
                    let contentCount = CountCharacters("articleContent");
                    contentContentHelp.innerHTML = contentCount + "/2000 caractères";
                    if(contentCount > 2000){
                        contentContentHelp.classList.add("invalid-feedback");
                        contentTextarea.classList.add("is-invalid");
                    } else if(contentCount <= 2000 && ledeContentHelp.classList.contains("invalid-feedback")){
                        contentContentHelp.classList.remove("invalid-feedback");
                    }
                });
            }
        });
        tinymce.init({
            selector: '#articleLede',         
            setup: function lede (text) {
                let ledeContentHelp = document.getElementById("ledeContentHelp");
                let textarea = document.getElementById("articleLede");
                text.on('keyup', function (e) { 
                    let ledeCount = CountCharacters("articleLede");
                    ledeContentHelp.innerHTML = ledeCount + "/500 caractères";
                    if(ledeCount > 500){
                        ledeContentHelp.classList.add("invalid-feedback");
                        textarea.classList.add("is-invalid");
                    } else if(ledeCount <= 500 && ledeContentHelp.classList.contains("invalid-feedback")){
                        ledeContentHelp.classList.remove("invalid-feedback");
                    }
                });
            }
        });
    var wordcount = tinymce.activeEditor.plugins.wordcount;
    function CountCharacters(elementId) {
        var body = tinymce.get(elementId).getBody();
        var content = tinymce.trim(body.innerText || body.textContent);
        return content.length;
    };
    </script>
{% endblock %}